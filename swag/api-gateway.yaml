openapi: 3.0.0
info:
  title: Solegito API Gateway
  version: '1.1'
servers:
  - url: http://127.0.0.1:8080/api/v1
    description: Development server
paths:
  /auth/login:
    post:
      tags:
      - auth
      summary: Login user
      operationId: application.auth.login
      requestBody:
        description: Login data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginParams'
      responses:
        '200':
          description: Login status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginStatus'
  /auth/logout:
    post:
      tags:
      - auth
      summary: Logout user
      operationId: application.auth.logout
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: Logout the user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogoutStatus'
  /auth/refresh:
    post:
      tags:
      - auth
      summary: Refresh the access token
      operationId: application.auth.refresh
      parameters:
        - in: header
          name: X-CSRF-TOKEN
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: Refresh token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefreshStatus'
  /auth/token:
    get:
      tags:
      - auth
      summary: Return token details
      operationId: application.auth.dump_token
      responses:
        '200':
          description: dump tokens
          content:
            'text/plain':
              schema:
                type: string
  /indexer/search:
    get:
      tags:
      - indexer
      summary: Start search through indexed documents
      operationId: application.indexer.search
      parameters:
        - in: query
          name: query
          schema:
            type: string
          required: true
          description: Search query. Leave it empty to match all documents.
        - in: query
          name: sortKey
          schema:
            type: string
            enum: [score, id, mt]
            default: score
          description: Search result sort key
        - in: query
          name: sortOrder
          schema:
            type: string
            enum: [asc, desc]
            default: asc
          description: Search result sort order
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 25
          description: The numbers of items to return
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResult'
  /indexer/search/{cookie}:
    get:
      tags:
      - indexer
      summary: Continue search through indexed documents
      operationId: application.indexer.search_cookie
      parameters:
        - in: path
          name: cookie
          schema:
            type: string
          required: true
          description: Search cookie returned by initial search request
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResult'
  /indexer/content/{id}:
    get:
      tags:
      - indexer
      summary: Get content extracted from the document
      operationId: application.indexer.content
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Document identifier
      responses:
        '200':
          description: Text extracted from the document
          content:
            text/plain:
              schema:
                type: string
  /indexer/file/{id}:
    get:
      tags:
      - indexer
      summary: Download document file
      operationId: application.indexer.file
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Document identifier
      responses:
        '200':
          description: Document file
          content:
            "*/*":
              schema:
                type: string
                format: binary
  /client:
    get:
      tags:
        - client
      summary: List client
      operationId: application.clients_service.list_clients
      responses:
        '200':
          description: Clients list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Client'
    post:
      tags:
      - client
      summary: Create client
      operationId: application.clients_service.create_client
      requestBody:
        description: Client data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
      responses:
        '200':
          description: Client data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
  /client/{id}:
    get:
      tags:
        - client
      summary: Get client
      operationId: application.clients_service.get_client
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Client identifier
      responses:
        '200':
          description: Client data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
    put:
      tags:
        - client
      summary: Update client
      operationId: application.clients_service.update_client
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Client identifier
      requestBody:
        description: Client data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
      responses:
        '200':
          description: Client data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
    delete:
      tags:
        - client
      summary: Delete client
      operationId: application.clients_service.delete_client
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Client identifier
      responses:
        '200':
          description: Confirmation
          content:
            application/json:
              schema:
                type: boolean
  /contact_person:
    post:
      tags:
        - contact_person
      summary: Create contact person
      operationId: application.clients_service.create_contact_people
      requestBody:
        description: Contact person data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactPeople'
      responses:
        '200':
          description: Contact person data
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContactPerson'
  /contact_person/{id}:
    get:
      tags:
        - contact_person
      summary: Get contact person
      operationId: application.clients_service.get_contact_person
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Contact person identifier
      responses:
        '200':
          description: Contact person data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactPerson'
    put:
      tags:
        - contact_person
      summary: Update contact person
      operationId: application.clients_service.update_contact_person
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Contact person identifier
      requestBody:
        description: Contact person data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactPerson'
      responses:
        '200':
          description: Contact person data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactPerson'
    delete:
      tags:
        - contact_person
      summary: Delete contact person
      operationId: application.clients_service.delete_contact_person
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Contact person identifier
      responses:
        '200':
          description: Confirmation
          content:
            application/json:
              schema:
                type: boolean
components:
  schemas:
    Client:
      required:
        - billing
        - category
        - invoice
        - person
      type: object
      properties:
        id:
          type: integer
        billing:
          type: string
        category:
          type: string
        invoice:
          type: string
        company:
          $ref: '#/components/schemas/Company'
        person:
          $ref: '#/components/schemas/Person'
        paperinvoice:
          $ref: '#/components/schemas/PaperInvoice'
        electronicinvoice:
          $ref: '#/components/schemas/ElectronicInvoice'
    Company:
      required:
        - name
      type: object
      properties:
        account_number:
          type: string
        apartment_number:
          type: string
        bank_name:
          type: string
        building_number:
          type: string
        city:
          type: string
        contact_people:
          type: array
          items:
            $ref: '#/components/schemas/ContactPerson'
        email:
          type: string
        is_active:
          type: boolean
        krs:
          type: string
        name:
          type: string
        nip:
          type: string
        phone:
          type: string
        postal_code:
          type: string
        regon:
          type: string
        street:
          type: string
        id:
          type: integer
    ContactPerson:
      required:
        - first_name
        - last_name
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        phone:
          type: string
        position:
          type: string
        company_id:
          type: integer
    ContactPeople:
      type: object
      properties:
        contact_people:
          type: array
          items:
            $ref: '#/components/schemas/ContactPerson'
    Person:
      required:
        - first_name
        - last_name
      type: object
      properties:
        account_number:
          type: string
        apartment_number:
          type: string
        bank_name:
          type: string
        building_number:
          type: string
        city:
          type: string
        email:
          type: string
        first_name:
          type: string
        is_active:
          type: boolean
        last_name:
          type: string
        nip:
          type: string
        pesel:
          type: string
        phone:
          type: string
        postal_code:
          type: string
        street:
          type: string
    PaperInvoice:
      type: object
      properties:
        apartment_number:
          type: string
        building_number:
          type: string
        city:
          type: string
        comment:
          type: string
        is_active:
          type: boolean
        postal_code:
          type: string
        street:
          type: string
    ElectronicInvoice:
      type: object
      properties:
        comment:
          type: string
        email:
          type: string
        is_active:
          type: boolean
    LoginParams:
      type: object
      properties:
        username:
          type: string
          description: User name
        password:
          type: string
          description: User password
    LoginStatus:
      type: object
      properties:
        identity:
          type: string
          description: User identity
        login:
          type: boolean
          description: Login status
    LogoutStatus:
      type: object
      properties:
        logout:
          type: boolean
          description: Logout status
    RefreshStatus:
      type: object
      properties:
        refresh:
          type: boolean
          description: Refresh status
    SearchResult:
      type: object
      properties:
        hits:
          type: array
          description: List with search hits
          items:
            $ref: '#/components/schemas/SearchHit'
        cookie:
          type: string
          description: Next search cookie
    SearchHit:
      type: object
      properties:
        id:
          type: string
          description: Document identifier
        path:
          type: string
          description: Document location
        modTime:
          type: integer
          description: Time of the last document modification
        attributes:
          type: object
          description: Object storing document attributes
          properties:
            court:
              type: string
              description: Court name
            signature:
              type: string
              description: Document signature
tags:
  - name: auth
    description: Authorization service
  - name: indexer
    description: Indexer service